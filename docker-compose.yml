version: '3.8'

services:
  zookeeper:
    image: "bitnami/zookeeper:latest"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: "bitnami/kafka:latest"
    container_name: "kafka"
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://kafka:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,PLAINTEXT_INTERNAL://kafka:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT_INTERNAL
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKAJS_NO_PARTITIONER_WARNING=1
      - KAFKA_LOG_RETENTION_BYTES=52428800  # 50 MB
    depends_on:
      - zookeeper

  postgresql:
    image: postgres
    container_name: pgdb_tarea2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tienda
    ports:
      - "5444:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./BDD/db-init:/docker-entrypoint-initdb.d

  automatic-processor:
    build:
      context: ./Automatic Process Service
    environment:
      - DB_HOST=pgdb_tarea2
      - DB_PORT=5432
      - DB_NAME=tienda
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - KAFKA_BROKER=kafka:9093
    depends_on:
      - kafka
      - zookeeper
      - postgresql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://kafka:9092 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db_data: {}
