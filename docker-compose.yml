version: '3.8'

services:
  kafka1:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka1
    hostname: kafka1
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://kafka1:9092,CONTROLLER://kafka1:9093,EXTERNAL://kafka1:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka1:9093,1@kafka2:9093,2@kafka3:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_METADATA_LOG_DIR=/bitnami/kafka/data
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
      - KAFKA_KRAFT_CLUSTER_ID=OhyxjXs0S3ug6m7qiy4IWw
      - KAFKA_CFG_PREFERRED_LEADER=0
    volumes:
      - kafka1_data:/bitnami/kafka
    networks:
      - kafka-network

  kafka2:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka2
    hostname: kafka2
    ports:
      - '9095:9095'
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://kafka2:9092,CONTROLLER://kafka2:9093,EXTERNAL://kafka2:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092,EXTERNAL://localhost:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka1:9093,1@kafka2:9093,2@kafka3:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_METADATA_LOG_DIR=/bitnami/kafka/data
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
      - KAFKA_KRAFT_CLUSTER_ID=OhyxjXs0S3ug6m7qiy4IWw
      - KAFKA_CFG_PREFERRED_LEADER=0
      - KAFKA_CFG_DEFAULT_TOPIC_CONFIG=retention.ms=10000
    volumes:
      - kafka2_data:/bitnami/kafka
    networks:
      - kafka-network

  kafka3:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka3
    hostname: kafka3
    ports:
      - '9096:9096'
    environment:
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://kafka3:9092,CONTROLLER://kafka3:9093,EXTERNAL://kafka3:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka3:9092,EXTERNAL://localhost:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka1:9093,1@kafka2:9093,2@kafka3:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_METADATA_LOG_DIR=/bitnami/kafka/data
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
      - KAFKA_KRAFT_CLUSTER_ID=OhyxjXs0S3ug6m7qiy4IWw
      - KAFKA_CFG_PREFERRED_LEADER=0
      - KAFKA_CFG_DEFAULT_TOPIC_CONFIG=retention.ms=10000
    volumes:
      - kafka3_data:/bitnami/kafka
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092,kafka2:9092,kafka3:9092
    ports:
      - '8080:8080'
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - kafka-network

  postgresql:
    image: postgres
    container_name: pgdb_tarea2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tienda
    ports:
      - "5444:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./BDD/db-init:/docker-entrypoint-initdb.d
    networks:
      - kafka-network

  automatic-processor-normal:
    build:
      context: ./Automatic Process Service/normal
    environment:
      - DB_HOST=pgdb_tarea2
      - DB_PORT=5432
      - DB_NAME=tienda
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - KAFKA_BROKER=kafka1:9092,kafka2:9092,kafka3:9092
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - postgresql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://kafka1:9092 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - kafka-network

  automatic-processor-slower:
    build:
      context: ./Automatic Process Service/slower
    environment:
      - DB_HOST=pgdb_tarea2
      - DB_PORT=5432
      - DB_NAME=tienda
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - KAFKA_BROKER=kafka1:9092,kafka2:9092,kafka3:9092
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - postgresql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://kafka1:9092 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - kafka-network

volumes:
  kafka1_data: {}
  kafka2_data: {}
  kafka3_data: {}
  db_data: {}

networks:
  kafka-network:
    driver: bridge